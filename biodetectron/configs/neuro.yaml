MODEL:
  WEIGHTS: ""
  MASK_ON: False
  RESNETS:
    DEPTH: 50
  META_ARCHITECTURE: "GeneralizedRCNN"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: 0
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
  FPN:
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
    NORM: "GN"
  ANCHOR_GENERATOR:
    SIZES: [[64], [128], [256], [384], [512]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]  # Three aspect ratios (same for all in feature maps)
  RPN:
    IN_FEATURES: ["p2", "p3", "p4", "p5", "p6"]
    PRE_NMS_TOPK_TRAIN: 3000  # Per FPN level
    PRE_NMS_TOPK_TEST: 3000  # Per FPN level
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1500
    POST_NMS_TOPK_TEST: 1500
  ROI_HEADS:
    NAME: "StandardROIHeads"
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    NUM_CLASSES: 1
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    NORM: "GN"
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
  PIXEL_MEAN: [0,0,0]
  PIXEL_STD: [1,1,1]
DATASETS: 
  TRAIN: ("neuro",)
  TEST: ("neuro_val",)
DATALOADER:
  NUM_WORKERS: 8
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.001
  STEPS: (60000, 80000)
  MAX_ITER: 10000000
  CHECKPOINT_PERIOD: 1000
INPUT:
  MIN_SIZE_TRAIN: (1024,)
  MAX_SIZE_TRAIN: 1024
TEST:
  EVAL_PERIOD: 1000
OUTPUT_DIR: '/scratch/bunk/logs'
VIS_PERIOD: 1000